# 생활코딩 수업 따라해보기
https://www.tensorflow.org/js/models?hl=ko

https://github.com/tensorflow/tfjs-models/tree/master/mobilenet
MobileNet 소스 복사

node js를 이용하여 MobileNet 소스 실행해보기


-----------------------------------------------------------------------------------------------
[node js]
var express = require('express');
const ejs = require('ejs');
const http = require('http');
const static = require('serve-static');
var fs = require('fs');
const router = express.Router();
var app = express();
var path = require('path');
const cors = require('cors');
const expressErrorHandler = require('express-error-handler');
const errorHandler = expressErrorHandler({
  static:{
    '404': __dirname + '/public/404.html'
  }
});
app.set('port',process.env.PORT || 3000);
app.use('/public',static(path.join(__dirname + 'public')));
app.use('/upload',static(path.join(__dirname + 'upload')));
console.log(__dirname);
app.set('views',path.join(__dirname , 'views'));
app.set('view engine', 'ejs');
app.use(cors());

app.use('/',router);
app.use(expressErrorHandler.httpError(404));
app.use(errorHandler);

var server = http.createServer(function(request,response){
  var url = request.url;
  if(request.url == '/'){
    url = '/public/home.html';
  }
  if(request.url == '/favicon.ico'){
    return response.writeHead(404);
  }
  response.writeHead(200);
  response.end(fs.readFileSync(__dirname + url));
},app);
server.listen(app.get('port'));

-------------------------------------------------------------------------------------

<!DOCTYPE html>
<html>
    <head>
        <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.0.1"> </script>
        <!-- Load the MobileNet model. -->
        <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/mobilenet@1.0.0"> </script>
        
    </head>
    <body>
        <script>
            var ondo = [20,21,22,23];
            var sale = [40,42,44,46];
            var input = tf.tensor(ondo);
            var output = tf.tensor(sale);

            var X = tf.input({ shape: [1]});
            var Y = tf.layers.dense({ units: 1}).apply(X);
            var model = tf.model({ inputs: X, outputs: Y});
            var compileParam = { optimizer: tf.train.adam(), loss: tf.losses.meanSquaredError}
            model.compile(compileParam);

            //var fitParam = {epochs: 10000}
            var fitParam = {
                epochs: 100,
                callbacks:{
                    onEpochEnd:
                    function(epoch, logs){
                        console.log('epoch',epoch, logs);
                    }
                }
            }
            model.fit(input, output, fitParam).then(function(result){
                var predict1 = model.predict(input);
                predict1.print();
            });
</script>

    </body>
</html>
