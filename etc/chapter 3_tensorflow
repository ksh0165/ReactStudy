from sklearn.feature_extraction.text import TfidfVectorizer
sent = ("휴일 인 오늘 도 서쪽 을 중심 으로 폭염 이 이어졌는데요, 내일 은 반가운 비 소식 이 있습니다.","폭염 을 피해서 휴일 에 놀러왔다가 갑작스런 비 로 인해 망연자실 하고 있습니다.")
tfidf_vectorizer = TfidfVectorizer()
tfidf_matrix = tfidf_vectorizer.fit_transform(sent)

idf = tfidf_vectorizer.idf_

-----------------------------------------------------------------------------------------------------------
import os
import re
import pandas as pd
import tensorflow as tf
from tensorflow.keras import utils
data_set = tf.keras.utils.get_file(
    fname="imdb.tar.gz",
    origin="http://ai.stanford.edu/~amaas/data/sentiment/aclImdb_v1.tar.gz",
    extract=True)
-----------------------------------------------------------------------------------------------------------
def directory_data(directory):
    data = {}
    data["review"] = []
    for file_path in os.listdir(directory):
        with open(os.path.join(directory, file_path), "r") as file:
                 data["review"].append(file.read())
    return pd.DataFrame.from_dict(data)

def data(directory):
    pos_df = directory_data(os.path.join(directory,"pos"))
    neg_df = directory_data(os.path.join(directory,"neg"))
    pos_df["sentiment"]=1
    neg_df["sentiment"]=0
    
    return pd.concat([pos_df,neg_df])

train_df = data(os.path.join(os.path.dirname(data_set),"aclImdb","train"))
test_df = data(os.path.join(os.path.dirname(data_set),"aclImdb","test"))

train_df.head()
reviews = list(train_df['review'])

tokenized_reviews = [r.split() for r in reviews]

review_len_by_token = [len(t) for t in tokenized_reviews]

review_len_by_eumjeol = [len(s.replace(' ', '')) for s in reviews]
-----------------------------------------------------------------------------------------------------------
import matplotlib.pyplot as plt 

plt.figure(figsize=(12,5))

plt.hist(review_len_by_token, bins=50, alpha=0.5, color='r', label='word')
plt.hist(review_len_by_eumjeol, bins=50, alpha=0.5, color='b', label='alphabet')
plt.yscale('log',nonposy='clip')
plt.title('Review Length Histogram')
plt.xlabel('Review Length')
plt.ylabel('Number of Reviews')
-----------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------
