# 책 실습

package Thread;

public class Test10 {
	public static void main(String[] args) {
		Buffer buffer = new Buffer(30);
		Consumer consumer1 = new Consumer(buffer);
		Consumer consumer2 = new Consumer(buffer);
		
		Producer producer1 = new Producer(buffer);
		Producer producer2 = new Producer(buffer);
		
		consumer1.start();
		consumer2.start();
		producer1.start();
		producer2.start();
		System.out.println("메인프로그램 종료");
	}
}
class Producer extends Thread
{
	Buffer buffer;
	static int id = 0;
	int proId;
	
	Producer(Buffer buffer){
		this.buffer = buffer;
		proId = ++id;
	}
	
	public void run() {
		for(int i = 0; i<10; i++) {
			try {
				System.out.println("생산자:메시지 추가 -> ID"+ proId +", 메시지 ="+i);
				buffer.add(i);
				sleep(500);
			}catch(Exception e) {};
		}
		System.out.println("생산자 종료");
	}
}
class Consumer extends Thread
{
	Buffer buffer;
	static int id = 0;
	int conId;
	Consumer(Buffer buffer)
	{
		this.buffer = buffer;
		conId = ++id;
	}
	public void run()
	{
		int i;
		while(true)
		{
			try
			{
				i = buffer.get();
				System.out.println("소비자 : 메시지 확인 -> 소비자ID = "+conId + ", 정수값 = "+i);
			}catch(Exception e) {};
		}
	}
}

class Buffer
{
	int intBuf[];
	int n = 0;
	int t = 0;
	Buffer(int n)
	{
		intBuf = new int[n];
	}
	synchronized void add(int i)
	{
		intBuf[n++] = i;
		notifyAll();
	}
	synchronized int get()
	{
		if(n>t)
		{
			return intBuf[t++];
		}
		try{
		wait();
		}catch(InterruptedException e) {}
		return get();
	}
}
